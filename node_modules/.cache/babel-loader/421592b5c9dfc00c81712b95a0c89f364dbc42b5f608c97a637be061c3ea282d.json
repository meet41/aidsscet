{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\aiscet\\\\src\\\\components\\\\UpdateResult.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, get, update } from 'firebase/database';\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './AddSyllabus.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateResult = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [resultData, setResultData] = useState({\n    type: '',\n    year: '',\n    semester: '',\n    classname: '',\n    schedulePdf: null,\n    seatingPdf: null,\n    resultPdf: null,\n    schedulePdfUrl: '',\n    seatingPdfUrl: '',\n    resultPdfUrl: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchResultData = async () => {\n      const db = getDatabase();\n      const resultRef = ref(db, `results/${id}`);\n      try {\n        const snapshot = await get(resultRef);\n        if (snapshot.exists()) {\n          setResultData(snapshot.val());\n        } else {\n          console.log('No data available');\n        }\n      } catch (error) {\n        console.error('Error fetching result data:', error);\n      }\n    };\n    fetchResultData();\n  }, [id]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setResultData({\n      ...resultData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    const {\n      name,\n      files\n    } = e.target;\n    setResultData({\n      ...resultData,\n      [name]: files[0]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await updateResultData(resultData);\n    navigate('/');\n  };\n  const updateResultData = async data => {\n    const db = getDatabase();\n    const storage = getStorage();\n    const uploadFile = async (file, existingUrl) => {\n      if (file) {\n        const fileRef = storageRef(storage, `results/${file.name}`);\n        const uploadTask = await uploadBytes(fileRef, file);\n        return getDownloadURL(fileRef);\n      }\n      return existingUrl;\n    };\n    const schedulePdfUrl = await uploadFile(data.schedulePdf, data.schedulePdfUrl);\n    const seatingPdfUrl = await uploadFile(data.seatingPdf, data.seatingPdfUrl);\n    const resultPdfUrl = await uploadFile(data.resultPdf, data.resultPdfUrl);\n    const resultRef = ref(db, 'results/' + id);\n    const updatedResultData = {\n      ...data,\n      schedulePdfUrl,\n      seatingPdfUrl,\n      resultPdfUrl\n    };\n    update(resultRef, updatedResultData).then(() => {\n      console.log('Data updated successfully!');\n      navigate('/');\n    }).catch(error => {\n      console.error('Error updating data:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-syllabus-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-syllabus-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"type\",\n        placeholder: \"Type\",\n        value: resultData.type,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"year\",\n        placeholder: \"Year\",\n        value: resultData.year,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"semester\",\n        placeholder: \"Semester\",\n        value: resultData.semester,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"classname\",\n        placeholder: \"Classname\",\n        value: resultData.classname,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"schedulePdf\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"seatingPdf\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"resultPdf\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateResult, \"3GSIi0svwp74Mh4KGdxRRIw/Cu4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateResult;\nexport default UpdateResult;\nvar _c;\n$RefreshReg$(_c, \"UpdateResult\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","get","update","getStorage","storageRef","uploadBytes","getDownloadURL","useNavigate","useParams","jsxDEV","_jsxDEV","UpdateResult","_s","id","resultData","setResultData","type","year","semester","classname","schedulePdf","seatingPdf","resultPdf","schedulePdfUrl","seatingPdfUrl","resultPdfUrl","navigate","fetchResultData","db","resultRef","snapshot","exists","val","console","log","error","handleInputChange","e","name","value","target","handleFileChange","files","handleSubmit","preventDefault","updateResultData","data","storage","uploadFile","file","existingUrl","fileRef","uploadTask","updatedResultData","then","catch","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/aiscet/src/components/UpdateResult.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, get, update } from 'firebase/database';\r\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './AddSyllabus.css';\r\n\r\nconst UpdateResult = () => {\r\n  const { id } = useParams();\r\n  const [resultData, setResultData] = useState({\r\n    type: '',\r\n    year: '',\r\n    semester: '',\r\n    classname: '',\r\n    schedulePdf: null,\r\n    seatingPdf: null,\r\n    resultPdf: null,\r\n    schedulePdfUrl: '',\r\n    seatingPdfUrl: '',\r\n    resultPdfUrl: '',\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchResultData = async () => {\r\n      const db = getDatabase();\r\n      const resultRef = ref(db, `results/${id}`);\r\n      try {\r\n        const snapshot = await get(resultRef);\r\n        if (snapshot.exists()) {\r\n          setResultData(snapshot.val());\r\n        } else {\r\n          console.log('No data available');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching result data:', error);\r\n      }\r\n    };\r\n\r\n    fetchResultData();\r\n  }, [id]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setResultData({ ...resultData, [name]: value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const { name, files } = e.target;\r\n    setResultData({ ...resultData, [name]: files[0] });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await updateResultData(resultData);\r\n    navigate('/');\r\n  };\r\n\r\n  const updateResultData = async (data) => {\r\n    const db = getDatabase();\r\n    const storage = getStorage();\r\n\r\n    const uploadFile = async (file, existingUrl) => {\r\n      if (file) {\r\n        const fileRef = storageRef(storage, `results/${file.name}`);\r\n        const uploadTask = await uploadBytes(fileRef, file);\r\n        return getDownloadURL(fileRef);\r\n      }\r\n      return existingUrl;\r\n    };\r\n\r\n    const schedulePdfUrl = await uploadFile(data.schedulePdf, data.schedulePdfUrl);\r\n    const seatingPdfUrl = await uploadFile(data.seatingPdf, data.seatingPdfUrl);\r\n    const resultPdfUrl = await uploadFile(data.resultPdf, data.resultPdfUrl);\r\n\r\n    const resultRef = ref(db, 'results/' + id);\r\n    const updatedResultData = { ...data, schedulePdfUrl, seatingPdfUrl, resultPdfUrl };\r\n\r\n    update(resultRef, updatedResultData)\r\n      .then(() => {\r\n        console.log('Data updated successfully!');\r\n        navigate('/');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating data:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-syllabus-container\">\r\n      <form className=\"add-syllabus-form\" onSubmit={handleSubmit}>\r\n        <h2>Update Result</h2>\r\n        <input type=\"text\" name=\"type\" placeholder=\"Type\" value={resultData.type} onChange={handleInputChange} required />\r\n        <input type=\"text\" name=\"year\" placeholder=\"Year\" value={resultData.year} onChange={handleInputChange} required />\r\n        <input type=\"text\" name=\"semester\" placeholder=\"Semester\" value={resultData.semester} onChange={handleInputChange} required />\r\n        <input type=\"text\" name=\"classname\" placeholder=\"Classname\" value={resultData.classname} onChange={handleInputChange} required />\r\n        <input type=\"file\" name=\"schedulePdf\" onChange={handleFileChange} />\r\n        <input type=\"file\" name=\"seatingPdf\" onChange={handleFileChange} />\r\n        <input type=\"file\" name=\"resultPdf\" onChange={handleFileChange} />\r\n        <button type=\"submit\">Update Result</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateResult;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}