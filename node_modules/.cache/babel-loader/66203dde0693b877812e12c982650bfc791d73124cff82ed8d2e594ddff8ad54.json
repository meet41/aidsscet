{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getStorage, ref as storageRef, listAll, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { getDatabase, ref, query, orderByChild, equalTo, get } from 'firebase/database';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, collection, addDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAzfms5zemDO6HT33-H1hXtyp-UErnnJWc\",\n  authDomain: \"aiscet-23903.firebaseapp.com\",\n  databaseURL: \"https://aiscet-23903-default-rtdb.firebaseio.com\",\n  projectId: \"aiscet-23903\",\n  storageBucket: \"aiscet-23903.appspot.com\",\n  messagingSenderId: \"1057490352597\",\n  appId: \"1:1057490352597:web:03c067e10850a5e901655c\",\n  measurementId: \"G-V3QMCZK1JS\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst storage = getStorage(app);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst database = getDatabase(app);\n\n// Function to fetch results filtered by type\nexport const fetchResultsByType = async type => {\n  const resultsRef = ref(database, 'results');\n  const resultsQuery = query(resultsRef, orderByChild('type'), equalTo(type));\n\n  // Fetch the data\n  const snapshot = await get(resultsQuery);\n  if (snapshot.exists()) {\n    return snapshot.val();\n  } else {\n    return {};\n  }\n};\nexport { app, ref, storage, storageRef, uploadBytesResumable, getDownloadURL, listAll, auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, db, collection, addDoc, database };","map":{"version":3,"names":["initializeApp","getStorage","ref","storageRef","listAll","uploadBytesResumable","getDownloadURL","getDatabase","query","orderByChild","equalTo","get","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","collection","addDoc","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","storage","auth","db","database","fetchResultsByType","type","resultsRef","resultsQuery","snapshot","exists","val"],"sources":["E:/HTML/Udemy_Full Stack Web/aiscet/src/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getStorage, ref as storageRef, listAll, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\r\nimport { getDatabase, ref, query, orderByChild, equalTo, get } from 'firebase/database';\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { getFirestore, collection, addDoc } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAzfms5zemDO6HT33-H1hXtyp-UErnnJWc\",\r\n  authDomain: \"aiscet-23903.firebaseapp.com\",\r\n  databaseURL: \"https://aiscet-23903-default-rtdb.firebaseio.com\",\r\n  projectId: \"aiscet-23903\",\r\n  storageBucket: \"aiscet-23903.appspot.com\",\r\n  messagingSenderId: \"1057490352597\",\r\n  appId: \"1:1057490352597:web:03c067e10850a5e901655c\",\r\n  measurementId: \"G-V3QMCZK1JS\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst storage = getStorage(app);\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\nconst database = getDatabase(app);\r\n\r\n// Function to fetch results filtered by type\r\nexport const fetchResultsByType = async (type) => {\r\n  const resultsRef = ref(database, 'results');\r\n  const resultsQuery = query(resultsRef, orderByChild('type'), equalTo(type));\r\n\r\n  // Fetch the data\r\n  const snapshot = await get(resultsQuery);\r\n  if (snapshot.exists()) {\r\n    return snapshot.val();\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport {\r\n  app,\r\n  ref,\r\n  storage,\r\n  storageRef,\r\n  uploadBytesResumable,\r\n  getDownloadURL,\r\n  listAll,\r\n  auth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  db,\r\n  collection,\r\n  addDoc,\r\n  database\r\n};"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,UAAU,EAAEC,GAAG,IAAIC,UAAU,EAAEC,OAAO,EAAEC,oBAAoB,EAAEC,cAAc,QAAQ,kBAAkB;AAC/G,SAASC,WAAW,EAAEL,GAAG,EAAEM,KAAK,EAAEC,YAAY,EAAEC,OAAO,EAAEC,GAAG,QAAQ,mBAAmB;AACvF,SAASC,OAAO,EAAEC,8BAA8B,EAAEC,0BAA0B,EAAEC,OAAO,QAAQ,eAAe;AAC5G,SAASC,YAAY,EAAEC,UAAU,EAAEC,MAAM,QAAQ,oBAAoB;AAErE,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,8BAA8B;EAC1CC,WAAW,EAAE,kDAAkD;EAC/DC,SAAS,EAAE,cAAc;EACzBC,aAAa,EAAE,0BAA0B;EACzCC,iBAAiB,EAAE,eAAe;EAClCC,KAAK,EAAE,4CAA4C;EACnDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAG5B,aAAa,CAACmB,cAAc,CAAC;AACzC,MAAMU,OAAO,GAAG5B,UAAU,CAAC2B,GAAG,CAAC;AAC/B,MAAME,IAAI,GAAGlB,OAAO,CAACgB,GAAG,CAAC;AACzB,MAAMG,EAAE,GAAGf,YAAY,CAACY,GAAG,CAAC;AAC5B,MAAMI,QAAQ,GAAGzB,WAAW,CAACqB,GAAG,CAAC;;AAEjC;AACA,OAAO,MAAMK,kBAAkB,GAAG,MAAOC,IAAI,IAAK;EAChD,MAAMC,UAAU,GAAGjC,GAAG,CAAC8B,QAAQ,EAAE,SAAS,CAAC;EAC3C,MAAMI,YAAY,GAAG5B,KAAK,CAAC2B,UAAU,EAAE1B,YAAY,CAAC,MAAM,CAAC,EAAEC,OAAO,CAACwB,IAAI,CAAC,CAAC;;EAE3E;EACA,MAAMG,QAAQ,GAAG,MAAM1B,GAAG,CAACyB,YAAY,CAAC;EACxC,IAAIC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;IACrB,OAAOD,QAAQ,CAACE,GAAG,CAAC,CAAC;EACvB,CAAC,MAAM;IACL,OAAO,CAAC,CAAC;EACX;AACF,CAAC;AAED,SACEX,GAAG,EACH1B,GAAG,EACH2B,OAAO,EACP1B,UAAU,EACVE,oBAAoB,EACpBC,cAAc,EACdF,OAAO,EACP0B,IAAI,EACJjB,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPgB,EAAE,EACFd,UAAU,EACVC,MAAM,EACNc,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}