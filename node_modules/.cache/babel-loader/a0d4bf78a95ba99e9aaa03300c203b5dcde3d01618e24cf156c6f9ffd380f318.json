{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\aiscet\\\\src\\\\components\\\\UpdateAnalysis.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, get, update } from 'firebase/database';\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './AddSyllabus.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateAnalysis = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [analysisData, setAnalysisData] = useState({\n    year: '',\n    semester: '',\n    pdfUrl: '',\n    pdf: null\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchAnalysisData = async () => {\n      const db = getDatabase();\n      const analysisRef = ref(db, `analysis/${id}`);\n      try {\n        const snapshot = await get(analysisRef);\n        if (snapshot.exists()) {\n          setAnalysisData(snapshot.val());\n        } else {\n          console.log('No data available');\n        }\n      } catch (error) {\n        console.error('Error fetching analysis data:', error);\n      }\n    };\n    fetchAnalysisData();\n  }, [id]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAnalysisData({\n      ...analysisData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    setAnalysisData({\n      ...analysisData,\n      pdf: e.target.files[0]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const db = getDatabase();\n    const storage = getStorage();\n    const uploadFile = async (file, existingUrl) => {\n      if (file) {\n        const fileRef = storageRef(storage, `analysis/${analysisData.year}/${analysisData.semester}-${file.name}`);\n        await uploadBytes(fileRef, file);\n        return getDownloadURL(fileRef);\n      }\n      return existingUrl;\n    };\n    const pdfUrl = await uploadFile(analysisData.pdf, analysisData.pdfUrl);\n    const analysisRef = ref(db, `analysis/${id}`);\n    const updatedAnalysisData = {\n      ...analysisData,\n      pdfUrl\n    };\n    update(analysisRef, updatedAnalysisData).then(() => {\n      console.log('Data updated successfully!');\n      navigate('/showanalysis');\n    }).catch(error => {\n      console.error('Error updating data:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-syllabus-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"syllabus-header\",\n      children: \"Update Result Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"year\",\n          value: analysisData.year,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Semester:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"semester\",\n          value: analysisData.semester,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Result PDF:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"pdf\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Update Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateAnalysis, \"ijthpTzEiPRrbQL5D8oD2M+CFS0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateAnalysis;\nexport default UpdateAnalysis;\nvar _c;\n$RefreshReg$(_c, \"UpdateAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","get","update","getStorage","storageRef","uploadBytes","getDownloadURL","useNavigate","useParams","jsxDEV","_jsxDEV","UpdateAnalysis","_s","id","analysisData","setAnalysisData","year","semester","pdfUrl","pdf","navigate","fetchAnalysisData","db","analysisRef","snapshot","exists","val","console","log","error","handleInputChange","e","name","value","target","handleFileChange","files","handleSubmit","preventDefault","storage","uploadFile","file","existingUrl","fileRef","updatedAnalysisData","then","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/aiscet/src/components/UpdateAnalysis.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, get, update } from 'firebase/database';\r\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './AddSyllabus.css';\r\n\r\nconst UpdateAnalysis = () => {\r\n  const { id } = useParams();\r\n  const [analysisData, setAnalysisData] = useState({\r\n    year: '',\r\n    semester: '',\r\n    pdfUrl: '',\r\n    pdf: null,\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchAnalysisData = async () => {\r\n      const db = getDatabase();\r\n      const analysisRef = ref(db, `analysis/${id}`);\r\n      try {\r\n        const snapshot = await get(analysisRef);\r\n        if (snapshot.exists()) {\r\n          setAnalysisData(snapshot.val());\r\n        } else {\r\n          console.log('No data available');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching analysis data:', error);\r\n      }\r\n    };\r\n\r\n    fetchAnalysisData();\r\n  }, [id]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAnalysisData({ ...analysisData, [name]: value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setAnalysisData({ ...analysisData, pdf: e.target.files[0] });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const db = getDatabase();\r\n    const storage = getStorage();\r\n\r\n    const uploadFile = async (file, existingUrl) => {\r\n      if (file) {\r\n        const fileRef = storageRef(storage, `analysis/${analysisData.year}/${analysisData.semester}-${file.name}`);\r\n        await uploadBytes(fileRef, file);\r\n        return getDownloadURL(fileRef);\r\n      }\r\n      return existingUrl;\r\n    };\r\n\r\n    const pdfUrl = await uploadFile(analysisData.pdf, analysisData.pdfUrl);\r\n\r\n    const analysisRef = ref(db, `analysis/${id}`);\r\n    const updatedAnalysisData = { ...analysisData, pdfUrl };\r\n\r\n    update(analysisRef, updatedAnalysisData)\r\n      .then(() => {\r\n        console.log('Data updated successfully!');\r\n        navigate('/showanalysis');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating data:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-syllabus-container\">\r\n      <h1 className=\"syllabus-header\">Update Result Analysis</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Year:</label>\r\n          <input type=\"text\" name=\"year\" value={analysisData.year} onChange={handleInputChange} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Semester:</label>\r\n          <input type=\"text\" name=\"semester\" value={analysisData.semester} onChange={handleInputChange} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Result PDF:</label>\r\n          <input type=\"file\" name=\"pdf\" onChange={handleFileChange} />\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-button\">Update Result</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateAnalysis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}