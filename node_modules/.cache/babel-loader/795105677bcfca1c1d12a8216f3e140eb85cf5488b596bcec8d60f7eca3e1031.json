{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\aiscet\\\\src\\\\components\\\\UpdateAnalysis.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, get, update } from 'firebase/database';\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './AddSyllabus.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateAnalysis = () => {\n  _s();\n  const {\n    year,\n    semester\n  } = useParams();\n  const [analysisData, setAnalysisData] = useState({\n    pdf: null,\n    pdfUrl: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchAnalysisData = async () => {\n      const db = getDatabase();\n      const analysisRef = ref(db, `analysis/${year}/semesters/${semester}`);\n      try {\n        const snapshot = await get(analysisRef);\n        if (snapshot.exists()) {\n          setAnalysisData(snapshot.val());\n        } else {\n          console.log('No data available');\n        }\n      } catch (error) {\n        console.error('Error fetching analysis data:', error);\n      }\n    };\n    fetchAnalysisData();\n  }, [year, semester]);\n  const handleFileChange = e => {\n    setAnalysisData({\n      ...analysisData,\n      pdf: e.target.files[0]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await updateAnalysisData(analysisData);\n    navigate('/');\n  };\n  const updateAnalysisData = async data => {\n    const db = getDatabase();\n    const storage = getStorage();\n    const uploadFile = async (file, existingUrl) => {\n      if (file) {\n        const fileRef = storageRef(storage, `analysis/${file.name}`);\n        const uploadTask = await uploadBytes(fileRef, file);\n        return getDownloadURL(fileRef);\n      }\n      return existingUrl;\n    };\n    const pdfUrl = await uploadFile(data.pdf, data.pdfUrl);\n    const analysisRef = ref(db, `analysis/${year}/semesters/${semester}`);\n    const updatedAnalysisData = {\n      ...data,\n      pdfUrl\n    };\n    update(analysisRef, updatedAnalysisData).then(() => {\n      console.log('Data updated successfully!');\n      navigate('/');\n    }).catch(error => {\n      console.error('Error updating data:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-syllabus-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-syllabus-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"pdf\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateAnalysis, \"X3V70gfCQj9k2JTGZnMUj1qyF2Q=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateAnalysis;\nexport default UpdateAnalysis;\nvar _c;\n$RefreshReg$(_c, \"UpdateAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","get","update","getStorage","storageRef","uploadBytes","getDownloadURL","useNavigate","useParams","jsxDEV","_jsxDEV","UpdateAnalysis","_s","year","semester","analysisData","setAnalysisData","pdf","pdfUrl","navigate","fetchAnalysisData","db","analysisRef","snapshot","exists","val","console","log","error","handleFileChange","e","target","files","handleSubmit","preventDefault","updateAnalysisData","data","storage","uploadFile","file","existingUrl","fileRef","name","uploadTask","updatedAnalysisData","then","catch","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/aiscet/src/components/UpdateAnalysis.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, get, update } from 'firebase/database';\r\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './AddSyllabus.css';\r\n\r\nconst UpdateAnalysis = () => {\r\n  const { year, semester } = useParams();\r\n  const [analysisData, setAnalysisData] = useState({\r\n    pdf: null,\r\n    pdfUrl: '',\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchAnalysisData = async () => {\r\n      const db = getDatabase();\r\n      const analysisRef = ref(db, `analysis/${year}/semesters/${semester}`);\r\n      try {\r\n        const snapshot = await get(analysisRef);\r\n        if (snapshot.exists()) {\r\n          setAnalysisData(snapshot.val());\r\n        } else {\r\n          console.log('No data available');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching analysis data:', error);\r\n      }\r\n    };\r\n\r\n    fetchAnalysisData();\r\n  }, [year, semester]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setAnalysisData({ ...analysisData, pdf: e.target.files[0] });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await updateAnalysisData(analysisData);\r\n    navigate('/');\r\n  };\r\n\r\n  const updateAnalysisData = async (data) => {\r\n    const db = getDatabase();\r\n    const storage = getStorage();\r\n\r\n    const uploadFile = async (file, existingUrl) => {\r\n      if (file) {\r\n        const fileRef = storageRef(storage, `analysis/${file.name}`);\r\n        const uploadTask = await uploadBytes(fileRef, file);\r\n        return getDownloadURL(fileRef);\r\n      }\r\n      return existingUrl;\r\n    };\r\n\r\n    const pdfUrl = await uploadFile(data.pdf, data.pdfUrl);\r\n\r\n    const analysisRef = ref(db, `analysis/${year}/semesters/${semester}`);\r\n    const updatedAnalysisData = { ...data, pdfUrl };\r\n\r\n    update(analysisRef, updatedAnalysisData)\r\n      .then(() => {\r\n        console.log('Data updated successfully!');\r\n        navigate('/');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating data:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-syllabus-container\">\r\n      <form className=\"add-syllabus-form\" onSubmit={handleSubmit}>\r\n        <h2>Update Analysis</h2>\r\n        <input type=\"file\" name=\"pdf\" onChange={handleFileChange} />\r\n        <button type=\"submit\">Update Analysis</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateAnalysis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}