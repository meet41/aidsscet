{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\aiscet\\\\src\\\\components\\\\Others.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, set, get, update } from 'firebase/database';\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { useNavigate } from 'react-router-dom';\nimport './AddSyllabus.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Others = () => {\n  _s();\n  const [othersData, setOthersData] = useState({\n    name: '',\n    pdf: null,\n    pdfLink: ''\n  });\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [retrievedData, setRetrievedData] = useState(null);\n  const [useLink, setUseLink] = useState(false);\n  const navigate = useNavigate();\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOthersData({\n      ...othersData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    setOthersData({\n      ...othersData,\n      pdf: e.target.files[0]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await writeOthersData(othersData);\n    navigate('/'); // Navigate back to the home page\n  };\n  const writeOthersData = async data => {\n    const db = getDatabase();\n    const storage = getStorage();\n    const uploadFile = async file => {\n      if (file) {\n        const fileRef = storageRef(storage, `others/${file.name}`);\n        const uploadTask = await uploadBytes(fileRef, file);\n        return getDownloadURL(fileRef);\n      }\n      return null;\n    };\n    const pdfUrl = useLink ? data.pdfLink : await uploadFile(data.pdf);\n    const othersRef = ref(db, 'others/' + data.name);\n    const newOthersData = {\n      ...data,\n      pdfUrl\n    };\n\n    // Check if the entry already exists\n    get(othersRef).then(snapshot => {\n      if (snapshot.exists()) {\n        // Update existing entry\n        update(othersRef, newOthersData).then(() => {\n          console.log('Data updated successfully!');\n          navigate('/'); // Navigate back to the home page after successful update\n        }).catch(error => {\n          console.error('Error updating data:', error);\n        });\n      } else {\n        // Create new entry\n        set(othersRef, newOthersData).then(() => {\n          console.log('Data written successfully!');\n          navigate('/'); // Navigate back to the home page after successful write\n        }).catch(error => {\n          console.error('Error writing data:', error);\n        });\n      }\n    }).catch(error => {\n      console.error('Error checking data:', error);\n    });\n  };\n  const fetchOthersData = async () => {\n    const db = getDatabase();\n    const othersRef = ref(db, 'others/');\n    try {\n      const snapshot = await get(othersRef);\n      if (snapshot.exists()) {\n        setRetrievedData(snapshot.val());\n      } else {\n        console.log('No data available');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchOthersData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-syllabus-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-syllabus-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Quick Links\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: othersData.name,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: useLink,\n            onChange: e => setUseLink(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), \"Use PDF Link\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), useLink ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"pdfLink\",\n        placeholder: \"PDF Link\",\n        value: othersData.pdfLink,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"pdf\",\n        onChange: handleFileChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Others, \"0YmaDB78/63TMGjlM9anX+R7Hkg=\", false, function () {\n  return [useNavigate];\n});\n_c = Others;\nexport default Others;\nvar _c;\n$RefreshReg$(_c, \"Others\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","set","get","update","getStorage","storageRef","uploadBytes","getDownloadURL","useNavigate","jsxDEV","_jsxDEV","Others","_s","othersData","setOthersData","name","pdf","pdfLink","uploadProgress","setUploadProgress","retrievedData","setRetrievedData","useLink","setUseLink","navigate","handleInputChange","e","value","target","handleFileChange","files","handleSubmit","preventDefault","writeOthersData","data","db","storage","uploadFile","file","fileRef","uploadTask","pdfUrl","othersRef","newOthersData","then","snapshot","exists","console","log","catch","error","fetchOthersData","val","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","checked","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/aiscet/src/components/Others.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, set, get, update } from 'firebase/database';\r\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AddSyllabus.css';\r\n\r\nconst Others = () => {\r\n  const [othersData, setOthersData] = useState({\r\n    name: '',\r\n    pdf: null,\r\n    pdfLink: '',\r\n  });\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [retrievedData, setRetrievedData] = useState(null);\r\n  const [useLink, setUseLink] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setOthersData({ ...othersData, [name]: value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setOthersData({ ...othersData, pdf: e.target.files[0] });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await writeOthersData(othersData);\r\n    navigate('/'); // Navigate back to the home page\r\n  };\r\n\r\n  const writeOthersData = async (data) => {\r\n    const db = getDatabase();\r\n    const storage = getStorage();\r\n\r\n    const uploadFile = async (file) => {\r\n      if (file) {\r\n        const fileRef = storageRef(storage, `others/${file.name}`);\r\n        const uploadTask = await uploadBytes(fileRef, file);\r\n        return getDownloadURL(fileRef);\r\n      }\r\n      return null;\r\n    };\r\n\r\n    const pdfUrl = useLink ? data.pdfLink : await uploadFile(data.pdf);\r\n\r\n    const othersRef = ref(db, 'others/' + data.name);\r\n    const newOthersData = { ...data, pdfUrl };\r\n\r\n    // Check if the entry already exists\r\n    get(othersRef).then((snapshot) => {\r\n      if (snapshot.exists()) {\r\n        // Update existing entry\r\n        update(othersRef, newOthersData)\r\n          .then(() => {\r\n            console.log('Data updated successfully!');\r\n            navigate('/'); // Navigate back to the home page after successful update\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error updating data:', error);\r\n          });\r\n      } else {\r\n        // Create new entry\r\n        set(othersRef, newOthersData)\r\n          .then(() => {\r\n            console.log('Data written successfully!');\r\n            navigate('/'); // Navigate back to the home page after successful write\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error writing data:', error);\r\n          });\r\n      }\r\n    }).catch((error) => {\r\n      console.error('Error checking data:', error);\r\n    });\r\n  };\r\n\r\n  const fetchOthersData = async () => {\r\n    const db = getDatabase();\r\n    const othersRef = ref(db, 'others/');\r\n    try {\r\n      const snapshot = await get(othersRef);\r\n      if (snapshot.exists()) {\r\n        setRetrievedData(snapshot.val());\r\n      } else {\r\n        console.log('No data available');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOthersData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"add-syllabus-container\">\r\n      <form className=\"add-syllabus-form\" onSubmit={handleSubmit}>\r\n        <h2>Add Quick Links</h2>\r\n        <input type=\"text\" name=\"name\" placeholder=\"Name\" value={othersData.name} onChange={handleInputChange} required />\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={useLink}\r\n              onChange={(e) => setUseLink(e.target.checked)}\r\n            />\r\n            Use PDF Link\r\n          </label>\r\n        </div>\r\n        {useLink ? (\r\n          <input type=\"text\" name=\"pdfLink\" placeholder=\"PDF Link\" value={othersData.pdfLink} onChange={handleInputChange} required />\r\n        ) : (\r\n          <input type=\"file\" name=\"pdf\" onChange={handleFileChange} required />\r\n        )}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Others;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}