{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\aiscet\\\\src\\\\components\\\\Tnp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, get, update } from 'firebase/database';\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport './AddSyllabus.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tnp = () => {\n  _s();\n  const [tnpData, setTnpData] = useState({\n    name: 'T&P Data',\n    // Fixed name for TnP data\n    pdf: null,\n    pdfLink: ''\n  });\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [retrievedData, setRetrievedData] = useState(null);\n  const [useLink, setUseLink] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const auth = getAuth();\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTnpData({\n      ...tnpData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    setTnpData({\n      ...tnpData,\n      pdf: e.target.files[0]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await updateTnpData(tnpData);\n    navigate('/');\n  };\n  const updateTnpData = async data => {\n    const db = getDatabase();\n    const storage = getStorage();\n    const uploadFile = async file => {\n      if (file) {\n        const fileRef = storageRef(storage, `tnp/${file.name}`);\n        const uploadTask = await uploadBytes(fileRef, file);\n        return getDownloadURL(fileRef);\n      }\n      return null;\n    };\n    const pdfUrl = useLink ? data.pdfLink : await uploadFile(data.pdf);\n    const tnpRef = ref(db, 'tnp/' + data.name);\n    const updatedTnpData = {\n      ...data,\n      pdfUrl\n    };\n    update(tnpRef, updatedTnpData).then(() => {\n      console.log('Data updated successfully!');\n      navigate('/');\n    }).catch(error => {\n      console.error('Error updating data:', error);\n    });\n  };\n  const fetchTnpData = async () => {\n    const db = getDatabase();\n    const tnpRef = ref(db, 'tnp/TnP');\n    try {\n      const snapshot = await get(tnpRef);\n      if (snapshot.exists()) {\n        setRetrievedData(snapshot.val());\n        setTnpData(snapshot.val());\n      } else {\n        console.log('No data available');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTnpData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-syllabus-container\",\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-syllabus-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update TNP Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/deletetnp\",\n        children: \"Click here to Delete TnP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: tnpData.name,\n        onChange: handleInputChange,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: useLink,\n            onChange: e => setUseLink(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), \"Use PDF Link\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), useLink ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"pdfLink\",\n        placeholder: \"PDF Link\",\n        value: tnpData.pdfLink,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"pdf\",\n        onChange: handleFileChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"You must be logged in to update TNP data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Tnp, \"DLOl9ZEGmST4PiM2H+fNiETfaCA=\", false, function () {\n  return [useNavigate];\n});\n_c = Tnp;\nexport default Tnp;\nvar _c;\n$RefreshReg$(_c, \"Tnp\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","get","update","getStorage","storageRef","uploadBytes","getDownloadURL","useNavigate","getAuth","onAuthStateChanged","jsxDEV","_jsxDEV","Tnp","_s","tnpData","setTnpData","name","pdf","pdfLink","uploadProgress","setUploadProgress","retrievedData","setRetrievedData","useLink","setUseLink","isLoggedIn","setIsLoggedIn","navigate","auth","unsubscribe","user","handleInputChange","e","value","target","handleFileChange","files","handleSubmit","preventDefault","updateTnpData","data","db","storage","uploadFile","file","fileRef","uploadTask","pdfUrl","tnpRef","updatedTnpData","then","console","log","catch","error","fetchTnpData","snapshot","exists","val","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","href","type","placeholder","onChange","readOnly","checked","required","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/aiscet/src/components/Tnp.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, get, update } from 'firebase/database';\r\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport './AddSyllabus.css';\r\n\r\nconst Tnp = () => {\r\n  const [tnpData, setTnpData] = useState({\r\n    name: 'T&P Data', // Fixed name for TnP data\r\n    pdf: null,\r\n    pdfLink: '',\r\n  });\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [retrievedData, setRetrievedData] = useState(null);\r\n  const [useLink, setUseLink] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const auth = getAuth();\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setIsLoggedIn(true);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTnpData({ ...tnpData, [name]: value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setTnpData({ ...tnpData, pdf: e.target.files[0] });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await updateTnpData(tnpData);\r\n    navigate('/');\r\n  };\r\n\r\n  const updateTnpData = async (data) => {\r\n    const db = getDatabase();\r\n    const storage = getStorage();\r\n\r\n    const uploadFile = async (file) => {\r\n      if (file) {\r\n        const fileRef = storageRef(storage, `tnp/${file.name}`);\r\n        const uploadTask = await uploadBytes(fileRef, file);\r\n        return getDownloadURL(fileRef);\r\n      }\r\n      return null;\r\n    };\r\n\r\n    const pdfUrl = useLink ? data.pdfLink : await uploadFile(data.pdf);\r\n\r\n    const tnpRef = ref(db, 'tnp/' + data.name);\r\n    const updatedTnpData = { ...data, pdfUrl };\r\n\r\n    update(tnpRef, updatedTnpData)\r\n      .then(() => {\r\n        console.log('Data updated successfully!');\r\n        navigate('/');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating data:', error);\r\n      });\r\n  };\r\n\r\n  const fetchTnpData = async () => {\r\n    const db = getDatabase();\r\n    const tnpRef = ref(db, 'tnp/TnP');\r\n    try {\r\n      const snapshot = await get(tnpRef);\r\n      if (snapshot.exists()) {\r\n        setRetrievedData(snapshot.val());\r\n        setTnpData(snapshot.val());\r\n      } else {\r\n        console.log('No data available');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTnpData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"add-syllabus-container\">\r\n      {isLoggedIn ? (\r\n        <form className=\"add-syllabus-form\" onSubmit={handleSubmit}>\r\n          <h2>Update TNP Data</h2>\r\n          <a href=\"/deletetnp\">Click here to Delete TnP</a>\r\n          <input type=\"text\" name=\"name\" placeholder=\"Name\" value={tnpData.name} onChange={handleInputChange} readOnly />\r\n          <div>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={useLink}\r\n                onChange={(e) => setUseLink(e.target.checked)}\r\n              />\r\n              Use PDF Link\r\n            </label>\r\n          </div>\r\n          {useLink ? (\r\n            <input type=\"text\" name=\"pdfLink\" placeholder=\"PDF Link\" value={tnpData.pdfLink} onChange={handleInputChange} required />\r\n          ) : (\r\n            <input type=\"file\" name=\"pdf\" onChange={handleFileChange} required />\r\n          )}\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      ) : (\r\n        <p className=\"error-message\">You must be logged in to update TNP data.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tnp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}