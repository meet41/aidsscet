{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\aiscet\\\\src\\\\components\\\\Message.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getDatabase, ref, get } from 'firebase/database';\nimport MainAbout from \"./MainAbout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = () => {\n  _s();\n  const [messageData, setMessageData] = useState('');\n  useEffect(() => {\n    fetchMessageData();\n  }, []);\n  const fetchMessageData = async () => {\n    const db = getDatabase();\n    const messageRef = ref(db, 'aboutus/message');\n    try {\n      const snapshot = await get(messageRef);\n      if (snapshot.exists()) {\n        const data = snapshot.val();\n        setMessageData(data.htmlContent); // Assuming htmlContent contains the HTML formatted text\n      } else {\n        console.log('No data available');\n      }\n    } catch (error) {\n      console.error('Error fetching message data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainAbout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"greet\",\n      children: \"Dear Students, Faculty, and Stakeholders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), messageData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: messageData\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }, this), \"Loading message data...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Message, \"X6bH/fwrX6dC/3sQd9W2q7ZIjeU=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","get","MainAbout","jsxDEV","_jsxDEV","Message","_s","messageData","setMessageData","fetchMessageData","db","messageRef","snapshot","exists","data","val","htmlContent","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/aiscet/src/components/Message.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getDatabase, ref, get } from 'firebase/database';\r\nimport MainAbout from \"./MainAbout\";\r\n\r\nconst Message = () => {\r\n  const [messageData, setMessageData] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchMessageData();\r\n  }, []);\r\n\r\n  const fetchMessageData = async () => {\r\n    const db = getDatabase();\r\n    const messageRef = ref(db, 'aboutus/message');\r\n    try {\r\n      const snapshot = await get(messageRef);\r\n      if (snapshot.exists()) {\r\n        const data = snapshot.val();\r\n        setMessageData(data.htmlContent); // Assuming htmlContent contains the HTML formatted text\r\n      } else {\r\n        console.log('No data available');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching message data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MainAbout />\r\n      <h3 className=\"greet\">Dear Students, Faculty, and Stakeholders</h3>\r\n      {messageData ? (\r\n        <div dangerouslySetInnerHTML={{ __html: messageData }} />\r\n      ) : (\r\n        <p><br />Loading message data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,GAAG,EAAEC,GAAG,QAAQ,mBAAmB;AACzD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACdW,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,EAAE,GAAGX,WAAW,CAAC,CAAC;IACxB,MAAMY,UAAU,GAAGX,GAAG,CAACU,EAAE,EAAE,iBAAiB,CAAC;IAC7C,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMX,GAAG,CAACU,UAAU,CAAC;MACtC,IAAIC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;QACrB,MAAMC,IAAI,GAAGF,QAAQ,CAACG,GAAG,CAAC,CAAC;QAC3BP,cAAc,CAACM,IAAI,CAACE,WAAW,CAAC,CAAC,CAAC;MACpC,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAClC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACF,SAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbpB,OAAA;MAAIqB,SAAS,EAAC,OAAO;MAAAL,QAAA,EAAC;IAAwC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClEjB,WAAW,gBACVH,OAAA;MAAKsB,uBAAuB,EAAE;QAAEC,MAAM,EAAEpB;MAAY;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEzDpB,OAAA;MAAAgB,QAAA,gBAAGhB,OAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,2BAAuB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACpC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAAlB,EAAA,CAlCKD,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAoCb,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}