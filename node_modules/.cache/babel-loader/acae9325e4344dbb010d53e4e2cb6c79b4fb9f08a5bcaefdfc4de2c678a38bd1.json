{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\aiscet\\\\src\\\\components\\\\ImageUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getStorage, ref as storageRef, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport './ImageUploader.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageUploader = () => {\n  _s();\n  const [imageFile, setImageFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [downloadURL, setDownloadURL] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const auth = getAuth();\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const sanitizeFileName = fileName => {\n    return fileName.replace(/[.#$[\\]]/g, '_');\n  };\n  const handleUpload = () => {\n    if (!imageFile || !isLoggedIn) return;\n    const storage = getStorage();\n    const sanitizedFileName = sanitizeFileName(imageFile.name);\n    const fileRef = storageRef(storage, `images/${sanitizedFileName}`);\n    const uploadTask = uploadBytesResumable(fileRef, imageFile);\n    uploadTask.on('state_changed', snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setUploadProgress(progress);\n    }, error => {\n      console.error('Upload failed:', error);\n    }, async () => {\n      const url = await getDownloadURL(fileRef);\n      setDownloadURL(url);\n      navigate('/');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-uploader-container\",\n    children: [isLoggedIn && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/imagedelete\",\n      children: \"Click here to Delete Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Home Page Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"You must be logged in to upload images.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setImageFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: !imageFile,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Upload Progress: \", uploadProgress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"Cq2IkBNJ9aRNBqBli0d84wAe+gA=\", false, function () {\n  return [useNavigate];\n});\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","useEffect","getStorage","ref","storageRef","uploadBytesResumable","getDownloadURL","useNavigate","getAuth","onAuthStateChanged","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageUploader","_s","imageFile","setImageFile","uploadProgress","setUploadProgress","downloadURL","setDownloadURL","isLoggedIn","setIsLoggedIn","navigate","auth","unsubscribe","user","sanitizeFileName","fileName","replace","handleUpload","storage","sanitizedFileName","name","fileRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","error","console","url","className","children","href","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/aiscet/src/components/ImageUploader.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getStorage, ref as storageRef, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport './ImageUploader.css';\r\n\r\nconst ImageUploader = () => {\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [downloadURL, setDownloadURL] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const auth = getAuth();\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setIsLoggedIn(true);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const sanitizeFileName = (fileName) => {\r\n    return fileName.replace(/[.#$[\\]]/g, '_');\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (!imageFile || !isLoggedIn) return;\r\n\r\n    const storage = getStorage();\r\n    const sanitizedFileName = sanitizeFileName(imageFile.name);\r\n    const fileRef = storageRef(storage, `images/${sanitizedFileName}`);\r\n    const uploadTask = uploadBytesResumable(fileRef, imageFile);\r\n\r\n    uploadTask.on(\r\n      'state_changed',\r\n      (snapshot) => {\r\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        setUploadProgress(progress);\r\n      },\r\n      (error) => {\r\n        console.error('Upload failed:', error);\r\n      },\r\n      async () => {\r\n        const url = await getDownloadURL(fileRef);\r\n        setDownloadURL(url);\r\n        navigate('/');\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"image-uploader-container\">\r\n      {isLoggedIn && <a href=\"/imagedelete\">Click here to Delete Images</a>}\r\n      <h2>Home Page Upload Image</h2>\r\n      {!isLoggedIn && <p className=\"error-message\">You must be logged in to upload images.</p>}\r\n      {isLoggedIn && (\r\n        <>\r\n          <input type=\"file\" onChange={(e) => setImageFile(e.target.files[0])} />\r\n          <button onClick={handleUpload} disabled={!imageFile}>Upload</button>\r\n          {uploadProgress > 0 && <p>Upload Progress: {uploadProgress}%</p>}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}