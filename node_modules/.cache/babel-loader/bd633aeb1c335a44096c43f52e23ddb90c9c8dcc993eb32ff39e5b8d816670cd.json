{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\aiscet\\\\src\\\\components\\\\UpdateClassTimeTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, get, update } from 'firebase/database';\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './AddSyllabus.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateClassTimetable = () => {\n  _s();\n  const {\n    no\n  } = useParams();\n  const [timetableData, setTimetableData] = useState({\n    semester: '',\n    pdf: null,\n    pdfUrl: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchTimetableData = async () => {\n      const db = getDatabase();\n      const timetableRef = ref(db, `classTimetables/${no}`);\n      try {\n        const snapshot = await get(timetableRef);\n        if (snapshot.exists()) {\n          setTimetableData(snapshot.val());\n        } else {\n          console.log('No data available');\n        }\n      } catch (error) {\n        console.error('Error fetching timetable data:', error);\n      }\n    };\n    fetchTimetableData();\n  }, [no]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTimetableData({\n      ...timetableData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    setTimetableData({\n      ...timetableData,\n      pdf: e.target.files[0]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await updateTimetableData(timetableData);\n    navigate('/showtable');\n  };\n  const updateTimetableData = async data => {\n    const db = getDatabase();\n    const storage = getStorage();\n    const uploadFile = async (file, existingUrl) => {\n      if (file) {\n        const fileRef = storageRef(storage, `classTimetables/${file.name}`);\n        const uploadTask = await uploadBytes(fileRef, file);\n        return getDownloadURL(fileRef);\n      }\n      return existingUrl;\n    };\n    const pdfUrl = await uploadFile(data.pdf, data.pdfUrl);\n    const timetableRef = ref(db, `classTimetables/${no}`);\n    const updatedTimetableData = {\n      ...data,\n      pdfUrl\n    };\n    update(timetableRef, updatedTimetableData).then(() => {\n      console.log('Data updated successfully!');\n      navigate('/showtable');\n    }).catch(error => {\n      console.error('Error updating data:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-syllabus-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-syllabus-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Class Timetable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"semester\",\n        placeholder: \"Semester\",\n        value: timetableData.semester,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"pdf\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Timetable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateClassTimetable, \"qiEsn31VB4b+t9+WKu2cZ0RyHRY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateClassTimetable;\nexport default UpdateClassTimetable;\nvar _c;\n$RefreshReg$(_c, \"UpdateClassTimetable\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","get","update","getStorage","storageRef","uploadBytes","getDownloadURL","useNavigate","useParams","jsxDEV","_jsxDEV","UpdateClassTimetable","_s","no","timetableData","setTimetableData","semester","pdf","pdfUrl","navigate","fetchTimetableData","db","timetableRef","snapshot","exists","val","console","log","error","handleInputChange","e","name","value","target","handleFileChange","files","handleSubmit","preventDefault","updateTimetableData","data","storage","uploadFile","file","existingUrl","fileRef","uploadTask","updatedTimetableData","then","catch","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/aiscet/src/components/UpdateClassTimeTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, get, update } from 'firebase/database';\r\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './AddSyllabus.css';\r\n\r\nconst UpdateClassTimetable = () => {\r\n  const { no } = useParams();\r\n  const [timetableData, setTimetableData] = useState({\r\n    semester: '',\r\n    pdf: null,\r\n    pdfUrl: '',\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchTimetableData = async () => {\r\n      const db = getDatabase();\r\n      const timetableRef = ref(db, `classTimetables/${no}`);\r\n      try {\r\n        const snapshot = await get(timetableRef);\r\n        if (snapshot.exists()) {\r\n          setTimetableData(snapshot.val());\r\n        } else {\r\n          console.log('No data available');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching timetable data:', error);\r\n      }\r\n    };\r\n\r\n    fetchTimetableData();\r\n  }, [no]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTimetableData({ ...timetableData, [name]: value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setTimetableData({ ...timetableData, pdf: e.target.files[0] });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await updateTimetableData(timetableData);\r\n    navigate('/showtable');\r\n  };\r\n\r\n  const updateTimetableData = async (data) => {\r\n    const db = getDatabase();\r\n    const storage = getStorage();\r\n\r\n    const uploadFile = async (file, existingUrl) => {\r\n      if (file) {\r\n        const fileRef = storageRef(storage, `classTimetables/${file.name}`);\r\n        const uploadTask = await uploadBytes(fileRef, file);\r\n        return getDownloadURL(fileRef);\r\n      }\r\n      return existingUrl;\r\n    };\r\n\r\n    const pdfUrl = await uploadFile(data.pdf, data.pdfUrl);\r\n\r\n    const timetableRef = ref(db, `classTimetables/${no}`);\r\n    const updatedTimetableData = { ...data, pdfUrl };\r\n\r\n    update(timetableRef, updatedTimetableData)\r\n      .then(() => {\r\n        console.log('Data updated successfully!');\r\n        navigate('/showtable');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating data:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-syllabus-container\">\r\n      <form className=\"add-syllabus-form\" onSubmit={handleSubmit}>\r\n        <h2>Update Class Timetable</h2>\r\n        <input type=\"text\" name=\"semester\" placeholder=\"Semester\" value={timetableData.semester} onChange={handleInputChange} required />\r\n        <input type=\"file\" name=\"pdf\" onChange={handleFileChange} />\r\n        <button type=\"submit\">Update Timetable</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateClassTimetable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}