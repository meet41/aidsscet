{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\aiscet\\\\src\\\\components\\\\UpdateCd.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, update, get } from 'firebase/database';\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './AddSyllabus.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateCd = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [cdData, setCdData] = useState({\n    no: '',\n    year: '',\n    name: '',\n    file: null\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchCdData = async () => {\n      const db = getDatabase();\n      const cdRef = ref(db, `cd/${id}`);\n      try {\n        const snapshot = await get(cdRef);\n        if (snapshot.exists()) {\n          setCdData(snapshot.val());\n        } else {\n          console.log('No data available');\n        }\n      } catch (error) {\n        console.error('Error fetching CD data:', error);\n      }\n    };\n    fetchCdData();\n  }, [id]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCdData({\n      ...cdData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    setCdData({\n      ...cdData,\n      file: e.target.files[0]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await updateCdData(cdData);\n    navigate('/');\n  };\n  const updateCdData = async data => {\n    const db = getDatabase();\n    const storage = getStorage();\n    const uploadFile = async file => {\n      if (file) {\n        const fileRef = storageRef(storage, `cd/${file.name}`);\n        const uploadTask = await uploadBytes(fileRef, file);\n        return getDownloadURL(fileRef);\n      }\n      return null;\n    };\n    const fileUrl = data.file ? await uploadFile(data.file) : data.fileUrl;\n    const cdRef = ref(db, 'cd/' + data.no);\n    const updatedCdData = {\n      ...data,\n      fileUrl\n    };\n    update(cdRef, updatedCdData).then(() => {\n      console.log('Data updated successfully!');\n      navigate('/');\n    }).catch(error => {\n      console.error('Error updating data:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-syllabus-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-syllabus-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update CD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"no\",\n        placeholder: \"No\",\n        value: cdData.no,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"year\",\n        placeholder: \"Year\",\n        value: cdData.year,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: cdData.name,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update CD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateCd, \"AzC1gTIztJ0UbilxFo9dE/DcCRQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateCd;\nexport default UpdateCd;\nvar _c;\n$RefreshReg$(_c, \"UpdateCd\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","update","get","getStorage","storageRef","uploadBytes","getDownloadURL","useNavigate","useParams","jsxDEV","_jsxDEV","UpdateCd","_s","id","cdData","setCdData","no","year","name","file","navigate","fetchCdData","db","cdRef","snapshot","exists","val","console","log","error","handleInputChange","e","value","target","handleFileChange","files","handleSubmit","preventDefault","updateCdData","data","storage","uploadFile","fileRef","uploadTask","fileUrl","updatedCdData","then","catch","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/aiscet/src/components/UpdateCd.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, update, get } from 'firebase/database';\r\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './AddSyllabus.css';\r\n\r\nconst UpdateCd = () => {\r\n  const { id } = useParams();\r\n  const [cdData, setCdData] = useState({\r\n    no: '',\r\n    year: '',\r\n    name: '',\r\n    file: null,\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchCdData = async () => {\r\n      const db = getDatabase();\r\n      const cdRef = ref(db, `cd/${id}`);\r\n      try {\r\n        const snapshot = await get(cdRef);\r\n        if (snapshot.exists()) {\r\n          setCdData(snapshot.val());\r\n        } else {\r\n          console.log('No data available');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching CD data:', error);\r\n      }\r\n    };\r\n\r\n    fetchCdData();\r\n  }, [id]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCdData({ ...cdData, [name]: value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setCdData({ ...cdData, file: e.target.files[0] });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await updateCdData(cdData);\r\n    navigate('/');\r\n  };\r\n\r\n  const updateCdData = async (data) => {\r\n    const db = getDatabase();\r\n    const storage = getStorage();\r\n\r\n    const uploadFile = async (file) => {\r\n      if (file) {\r\n        const fileRef = storageRef(storage, `cd/${file.name}`);\r\n        const uploadTask = await uploadBytes(fileRef, file);\r\n        return getDownloadURL(fileRef);\r\n      }\r\n      return null;\r\n    };\r\n\r\n    const fileUrl = data.file ? await uploadFile(data.file) : data.fileUrl;\r\n\r\n    const cdRef = ref(db, 'cd/' + data.no);\r\n    const updatedCdData = { ...data, fileUrl };\r\n\r\n    update(cdRef, updatedCdData)\r\n      .then(() => {\r\n        console.log('Data updated successfully!');\r\n        navigate('/');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating data:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-syllabus-container\">\r\n      <form className=\"add-syllabus-form\" onSubmit={handleSubmit}>\r\n        <h2>Update CD</h2>\r\n        <input type=\"text\" name=\"no\" placeholder=\"No\" value={cdData.no} onChange={handleInputChange} required />\r\n        <input type=\"text\" name=\"year\" placeholder=\"Year\" value={cdData.year} onChange={handleInputChange} required />\r\n        <input type=\"text\" name=\"name\" placeholder=\"Name\" value={cdData.name} onChange={handleInputChange} required />\r\n        <input type=\"file\" name=\"file\" onChange={handleFileChange} />\r\n        <button type=\"submit\">Update CD</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateCd;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}