{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\aiscet\\\\src\\\\components\\\\ImageUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getStorage, ref as storageRef, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { getDatabase, ref as dbRef, set } from 'firebase/database';\nimport { useNavigate } from 'react-router-dom';\nimport { app } from '../firebase'; // Adjust the import path as needed\nimport './ImageUploader.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploader() {\n  _s();\n  const [imageFile, setImageFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [downloadURL, setDownloadURL] = useState('');\n  const navigate = useNavigate(); // Initialize useNavigate hook\n\n  const handleUpload = () => {\n    if (!imageFile) return;\n    const storage = getStorage(app);\n    const storageReference = storageRef(storage, `images/${imageFile.name}`);\n    const uploadTask = uploadBytesResumable(storageReference, imageFile);\n    uploadTask.on('state_changed', snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setUploadProgress(progress);\n    }, error => {\n      console.error('Upload failed:', error);\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(url => {\n        setDownloadURL(url);\n        console.log('File available at', url);\n\n        // Save the download URL to the database\n        const db = getDatabase(app);\n        const dbReference = dbRef(db, 'images/' + imageFile.name);\n        set(dbReference, {\n          url: url,\n          name: imageFile.name\n        });\n\n        // Redirect to home page after successful upload\n        navigate('/');\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-uploader-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setImageFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !imageFile,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Upload Progress: \", uploadProgress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), downloadURL && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"File available at: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: downloadURL,\n        children: downloadURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploader, \"Ih4KRthpWoi9s8xMV3zfknkyDkg=\", false, function () {\n  return [useNavigate];\n});\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","getStorage","ref","storageRef","uploadBytesResumable","getDownloadURL","getDatabase","dbRef","set","useNavigate","app","jsxDEV","_jsxDEV","ImageUploader","_s","imageFile","setImageFile","uploadProgress","setUploadProgress","downloadURL","setDownloadURL","navigate","handleUpload","storage","storageReference","name","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","error","console","then","url","log","db","dbReference","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","disabled","href","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/aiscet/src/components/ImageUploader.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { getStorage, ref as storageRef, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\r\nimport { getDatabase, ref as dbRef, set } from 'firebase/database';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { app } from '../firebase'; // Adjust the import path as needed\r\nimport './ImageUploader.css'; // Import the CSS file\r\n\r\nfunction ImageUploader() {\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [downloadURL, setDownloadURL] = useState('');\r\n  const navigate = useNavigate(); // Initialize useNavigate hook\r\n\r\n  const handleUpload = () => {\r\n    if (!imageFile) return;\r\n\r\n    const storage = getStorage(app);\r\n    const storageReference = storageRef(storage, `images/${imageFile.name}`);\r\n    const uploadTask = uploadBytesResumable(storageReference, imageFile);\r\n\r\n    uploadTask.on(\r\n      'state_changed',\r\n      (snapshot) => {\r\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        setUploadProgress(progress);\r\n      },\r\n      (error) => {\r\n        console.error('Upload failed:', error);\r\n      },\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\r\n          setDownloadURL(url);\r\n          console.log('File available at', url);\r\n\r\n          // Save the download URL to the database\r\n          const db = getDatabase(app);\r\n          const dbReference = dbRef(db, 'images/' + imageFile.name);\r\n          set(dbReference, {\r\n            url: url,\r\n            name: imageFile.name,\r\n          });\r\n\r\n          // Redirect to home page after successful upload\r\n          navigate('/');\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"image-uploader-container\">\r\n      <h2>Upload Image</h2>\r\n      <input type=\"file\" onChange={(e) => setImageFile(e.target.files[0])} />\r\n      <button onClick={handleUpload} disabled={!imageFile}>Upload</button>\r\n      <div>Upload Progress: {uploadProgress}%</div>\r\n      {downloadURL && <p>File available at: <a href={downloadURL}>{downloadURL}</a></p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUploader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}