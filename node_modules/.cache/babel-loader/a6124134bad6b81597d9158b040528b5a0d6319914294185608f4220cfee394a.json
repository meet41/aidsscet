{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\aiscet\\\\src\\\\components\\\\AddAthletics.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, set, get } from 'firebase/database';\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { useNavigate } from 'react-router-dom';\nimport './AddAthletics.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddAthletics = () => {\n  _s();\n  const [athleticEventData, setAthleticEventData] = useState({\n    eventDate: '',\n    facultyCo: '',\n    pdf: null\n  });\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [retrievedData, setRetrievedData] = useState(null);\n  const navigate = useNavigate();\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAthleticEventData({\n      ...athleticEventData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    setAthleticEventData({\n      ...athleticEventData,\n      pdf: e.target.files[0]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await writeAthleticEventData(athleticEventData);\n    navigate('/showathletics');\n  };\n  const writeAthleticEventData = async data => {\n    const db = getDatabase();\n    const storage = getStorage();\n    const uploadFile = async file => {\n      if (file) {\n        const fileRef = storageRef(storage, `athletics/${file.name}`);\n        const uploadTask = await uploadBytes(fileRef, file);\n        return getDownloadURL(fileRef);\n      }\n      return null;\n    };\n    const pdfUrl = await uploadFile(data.pdf);\n    const athleticEventRef = ref(db, 'athleticEvents/' + data.eventDate);\n    const newAthleticEventData = {\n      ...data,\n      pdfUrl\n    };\n    set(athleticEventRef, newAthleticEventData).then(() => {\n      console.log('Data written successfully!');\n    }).catch(error => {\n      console.error('Error writing data:', error);\n    });\n  };\n  const fetchAthleticEventData = async () => {\n    const db = getDatabase();\n    const athleticEventsRef = ref(db, 'athleticEvents/');\n    try {\n      const snapshot = await get(athleticEventsRef);\n      if (snapshot.exists()) {\n        setRetrievedData(snapshot.val());\n      } else {\n        console.log('No data available');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAthleticEventData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-athletic-event-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-athletic-event-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"eventDate\",\n        placeholder: \"Event Date\",\n        value: athleticEventData.eventDate,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"facultyCo\",\n        placeholder: \"Faculty Coordinator\",\n        value: athleticEventData.facultyCo,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"pdf\",\n        onChange: handleFileChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload Athletic Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(AddAthletics, \"/weQNkDLyjjxrLN9qh+x2Cuiz2s=\", false, function () {\n  return [useNavigate];\n});\n_c = AddAthletics;\nexport default AddAthletics;\nvar _c;\n$RefreshReg$(_c, \"AddAthletics\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","set","get","getStorage","storageRef","uploadBytes","getDownloadURL","useNavigate","jsxDEV","_jsxDEV","AddAthletics","_s","athleticEventData","setAthleticEventData","eventDate","facultyCo","pdf","uploadProgress","setUploadProgress","retrievedData","setRetrievedData","navigate","handleInputChange","e","name","value","target","handleFileChange","files","handleSubmit","preventDefault","writeAthleticEventData","data","db","storage","uploadFile","file","fileRef","uploadTask","pdfUrl","athleticEventRef","newAthleticEventData","then","console","log","catch","error","fetchAthleticEventData","athleticEventsRef","snapshot","exists","val","className","children","onSubmit","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/aiscet/src/components/AddAthletics.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, set, get } from 'firebase/database';\r\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AddAthletics.css';\r\n\r\nconst AddAthletics = () => {\r\n  const [athleticEventData, setAthleticEventData] = useState({\r\n    eventDate: '',\r\n    facultyCo: '',\r\n    pdf: null,\r\n  });\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [retrievedData, setRetrievedData] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAthleticEventData({ ...athleticEventData, [name]: value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setAthleticEventData({ ...athleticEventData, pdf: e.target.files[0] });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await writeAthleticEventData(athleticEventData);\r\n    navigate('/showathletics');\r\n  };\r\n\r\n  const writeAthleticEventData = async (data) => {\r\n    const db = getDatabase();\r\n    const storage = getStorage();\r\n\r\n    const uploadFile = async (file) => {\r\n      if (file) {\r\n        const fileRef = storageRef(storage, `athletics/${file.name}`);\r\n        const uploadTask = await uploadBytes(fileRef, file);\r\n        return getDownloadURL(fileRef);\r\n      }\r\n      return null;\r\n    };\r\n\r\n    const pdfUrl = await uploadFile(data.pdf);\r\n\r\n    const athleticEventRef = ref(db, 'athleticEvents/' + data.eventDate);\r\n    const newAthleticEventData = { ...data, pdfUrl };\r\n\r\n    set(athleticEventRef, newAthleticEventData)\r\n      .then(() => {\r\n        console.log('Data written successfully!');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error writing data:', error);\r\n      });\r\n  };\r\n\r\n  const fetchAthleticEventData = async () => {\r\n    const db = getDatabase();\r\n    const athleticEventsRef = ref(db, 'athleticEvents/');\r\n    try {\r\n      const snapshot = await get(athleticEventsRef);\r\n      if (snapshot.exists()) {\r\n        setRetrievedData(snapshot.val());\r\n      } else {\r\n        console.log('No data available');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAthleticEventData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"add-athletic-event-container\">\r\n      <form className=\"add-athletic-event-form\" onSubmit={handleSubmit}>\r\n        <input type=\"date\" name=\"eventDate\" placeholder=\"Event Date\" value={athleticEventData.eventDate} onChange={handleInputChange} required />\r\n        <input type=\"text\" name=\"facultyCo\" placeholder=\"Faculty Coordinator\" value={athleticEventData.facultyCo} onChange={handleInputChange} required />\r\n        <input type=\"file\" name=\"pdf\" onChange={handleFileChange} required />\r\n        <button type=\"submit\">Upload Athletic Event</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddAthletics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}