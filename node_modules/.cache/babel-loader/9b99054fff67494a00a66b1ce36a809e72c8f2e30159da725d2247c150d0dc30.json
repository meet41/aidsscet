{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\aiscet\\\\src\\\\components\\\\UpdateCalender.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, get, update } from 'firebase/database';\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './AddSyllabus.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateCalendar = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [calendarData, setCalendarData] = useState({\n    calendarType: '',\n    academicYear: '',\n    semester: '',\n    pdf: null,\n    pdfUrl: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchCalendarData = async () => {\n      setLoading(true);\n      setError(null);\n      const db = getDatabase();\n      const calendarRef = ref(db, `calendars/${id}`);\n      try {\n        const snapshot = await get(calendarRef);\n        setLoading(false);\n        if (snapshot.exists()) {\n          setCalendarData(snapshot.val());\n        } else {\n          console.log('No data available');\n        }\n      } catch (error) {\n        setLoading(false);\n        console.error('Error fetching calendar data:', error);\n        setError('Error fetching calendar data: ' + error.message);\n      }\n    };\n    fetchCalendarData();\n  }, [id]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCalendarData({\n      ...calendarData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    setCalendarData({\n      ...calendarData,\n      pdf: e.target.files[0]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await updateCalendarData(calendarData);\n    navigate('/showcalender');\n  };\n  const updateCalendarData = async data => {\n    const db = getDatabase();\n    const storage = getStorage();\n    const uploadFile = async (file, existingUrl) => {\n      if (file) {\n        const fileRef = storageRef(storage, `calendars/${file.name}`);\n        const uploadTask = await uploadBytes(fileRef, file);\n        return getDownloadURL(fileRef);\n      }\n      return existingUrl;\n    };\n    const pdfUrl = await uploadFile(data.pdf, data.pdfUrl);\n    const calendarRef = ref(db, `calendars/${id}`);\n    const updatedCalendarData = {\n      ...data,\n      pdfUrl\n    };\n    update(calendarRef, updatedCalendarData).then(() => {\n      console.log('Data updated successfully!');\n      navigate('/showcalender');\n    }).catch(error => {\n      console.error('Error updating data:', error);\n      setError('Error updating data: ' + error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-syllabus-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-syllabus-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-message\",\n        children: \"Loading calendar data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"calendarType\",\n        placeholder: \"Calendar Type\",\n        value: calendarData.calendarType,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"academicYear\",\n        placeholder: \"Academic Year\",\n        value: calendarData.academicYear,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"semester\",\n        placeholder: \"Semester\",\n        value: calendarData.semester,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"pdf\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateCalendar, \"QttyT9MNSPWhL1kDeL7z3msNILc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateCalendar;\nexport default UpdateCalendar;\nvar _c;\n$RefreshReg$(_c, \"UpdateCalendar\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","get","update","getStorage","storageRef","uploadBytes","getDownloadURL","useNavigate","useParams","jsxDEV","_jsxDEV","UpdateCalendar","_s","id","calendarData","setCalendarData","calendarType","academicYear","semester","pdf","pdfUrl","loading","setLoading","error","setError","navigate","fetchCalendarData","db","calendarRef","snapshot","exists","val","console","log","message","handleInputChange","e","name","value","target","handleFileChange","files","handleSubmit","preventDefault","updateCalendarData","data","storage","uploadFile","file","existingUrl","fileRef","uploadTask","updatedCalendarData","then","catch","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/aiscet/src/components/UpdateCalender.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, get, update } from 'firebase/database';\r\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './AddSyllabus.css';\r\n\r\nconst UpdateCalendar = () => {\r\n  const { id } = useParams();\r\n  const [calendarData, setCalendarData] = useState({\r\n    calendarType: '',\r\n    academicYear: '',\r\n    semester: '',\r\n    pdf: null,\r\n    pdfUrl: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchCalendarData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const db = getDatabase();\r\n      const calendarRef = ref(db, `calendars/${id}`);\r\n      try {\r\n        const snapshot = await get(calendarRef);\r\n        setLoading(false);\r\n        if (snapshot.exists()) {\r\n          setCalendarData(snapshot.val());\r\n        } else {\r\n          console.log('No data available');\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        console.error('Error fetching calendar data:', error);\r\n        setError('Error fetching calendar data: ' + error.message);\r\n      }\r\n    };\r\n\r\n    fetchCalendarData();\r\n  }, [id]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCalendarData({ ...calendarData, [name]: value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setCalendarData({ ...calendarData, pdf: e.target.files[0] });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await updateCalendarData(calendarData);\r\n    navigate('/showcalender');\r\n  };\r\n\r\n  const updateCalendarData = async (data) => {\r\n    const db = getDatabase();\r\n    const storage = getStorage();\r\n\r\n    const uploadFile = async (file, existingUrl) => {\r\n      if (file) {\r\n        const fileRef = storageRef(storage, `calendars/${file.name}`);\r\n        const uploadTask = await uploadBytes(fileRef, file);\r\n        return getDownloadURL(fileRef);\r\n      }\r\n      return existingUrl;\r\n    };\r\n\r\n    const pdfUrl = await uploadFile(data.pdf, data.pdfUrl);\r\n\r\n    const calendarRef = ref(db, `calendars/${id}`);\r\n    const updatedCalendarData = { ...data, pdfUrl };\r\n\r\n    update(calendarRef, updatedCalendarData)\r\n      .then(() => {\r\n        console.log('Data updated successfully!');\r\n        navigate('/showcalender');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating data:', error);\r\n        setError('Error updating data: ' + error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-syllabus-container\">\r\n      <form className=\"add-syllabus-form\" onSubmit={handleSubmit}>\r\n        <h2>Update Calendar</h2>\r\n        {loading && <p className=\"loading-message\">Loading calendar data...</p>}\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        <input type=\"text\" name=\"calendarType\" placeholder=\"Calendar Type\" value={calendarData.calendarType} onChange={handleInputChange} required />\r\n        <input type=\"text\" name=\"academicYear\" placeholder=\"Academic Year\" value={calendarData.academicYear} onChange={handleInputChange} required />\r\n        <input type=\"text\" name=\"semester\" placeholder=\"Semester\" value={calendarData.semester} onChange={handleInputChange} required />\r\n        <input type=\"file\" name=\"pdf\" onChange={handleFileChange} />\r\n        <button type=\"submit\">Update Calendar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}